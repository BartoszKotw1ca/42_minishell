Git Branches

git branch <new-branch> - creat new branch
git branch <new-branch> <number-of-comm> - creat new branch in that point

git checkout <other-branch> - change the branch(we can use that command in many fields)
git switch <other-brnach> - change the branch(only for that)

// local
git branch -m <new-name> - change the name for the branch we are on
git branch -m <old-name-branch> <new-name-branch> - change the name for the branch

git branch - to see all branches

// remotly - we can not create a new one but we can upload our local one
git push -u origin <name-of-branch>

git branch -v - show data connected with branchs
git branch -d <branch-name> - delete a branch

git merge <name-of-th-branch> - to merge the branches but in two different line
git rebase <name-of-the-branch> - to merge the branches but in straight line 

// locally
git log <name-of-branch>..<name-of-branch> - comparing branches l

//remotly
git log origin/<name-of-branch>..<name-of-branch> - coamparing

-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

	TTYNAME()
The  function  ttyname()  returns  a pointer to the null-terminated 
pathname of the terminal device that is open on the file descriptor fd,
or NULL on error (for example, if fd is not con‐
nected to a terminal).  The return value may point to static data, 
possibly overwritten by the next call.  The function ttyname_r() stores 
this pathname in the buffer buf of length buflen.

RETURN VALUE
    The function ttyname() returns a pointer to a pathname on success.
	On error, NULL is returned, and errno is set appropriately.

#include <stdio.h>
#include <unistd.h>

int main() {
  char *ttyname_result = ttyname(0); // 0 odpowiada standardowemu wejściu
  if (ttyname_result != NULL) {
    printf("Nazwa terminalu: %s\n", ttyname_result);
  } else {
    printf("Błąd pobierania nazwy terminalu\n");
  }

  return 0;
}

-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/


